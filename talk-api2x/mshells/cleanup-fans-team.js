// Generated by CoffeeScript 1.10.0
(function() {
  var _roomIds, _teamId, memberCount, members, oldUserNum, remove, removedNum, robotIds, skip, skippedNum, today,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  today = ISODate().getTime();

  _teamId = ObjectId('544f9896480ab1825e6a1fc3');

  members = db.members.find({
    team: _teamId
  });

  memberCount = db.members.count({
    team: _teamId
  });

  _roomIds = db.rooms.find({
    team: _teamId
  }).map(function(room) {
    return room._id;
  });

  robotIds = db.users.find({
    isRobot: true
  }).map(function(robot) {
    return "" + robot._id;
  });

  print("开始时间", ISODate());

  print("总人数 " + memberCount);

  print("总话题数", _roomIds.length);

  print("机器人数", robotIds.length);

  skippedNum = 0;

  removedNum = 0;

  oldUserNum = 0;

  skip = function(member) {
    skippedNum += 1;
    return print("跳过 " + member.user);
  };

  remove = function(member) {
    var remRoom;
    db.members.remove({
      _id: member._id
    });
    remRoom = db.members.remove({
      user: member.user,
      room: {
        $in: _roomIds
      }
    });
    removedNum += 1;
    return print("移除 " + member.user + " 移除话题 " + remRoom.nRemoved);
  };

  members.forEach(function(member) {
    var messages, ref, ref1, ref2;
    if (member.isQuit) {
      return remove(member);
    }
    if (member.createdAt > today - 86400000 * 7) {
      return skip(member);
    }
    if (ref = "" + member.user, indexOf.call(robotIds, ref) >= 0) {
      return skip(member);
    }
    if ((ref1 = member.role) === 'admin' || ref1 === 'owner') {
      return skip(member);
    }
    messages = db.messages.find({
      creator: member.user,
      team: member.team,
      isSystem: false
    }).sort({
      _id: -1
    }).limit(1);
    if ((messages != null ? (ref2 = messages[0]) != null ? ref2.createdAt : void 0 : void 0) > today - 86400000 * 30) {
      oldUserNum += 1;
      return skip(member);
    }
    return remove(member);
  });

  print("跳过人数", skippedNum);

  print("移除人数", removedNum);

  print("跳过老用户", oldUserNum);

  print("结束时间", ISODate());

}).call(this);
