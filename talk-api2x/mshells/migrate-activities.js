// Generated by CoffeeScript 1.10.0
(function() {
  var _startId, rooms, stories;

  _startId = ObjectId(Math.round(ISODate("2016-02-29T16:00:00.000Z") / 1000).toString(16) + new Array(17).join('0'));

  rooms = db.rooms.find({
    _id: {
      $gt: _startId
    },
    isGeneral: false,
    isArchived: false
  });

  rooms.forEach(function(room) {
    var activity, roomMembers;
    activity = db.activities.findOne({
      target: room._id
    });
    if (activity) {
      return;
    }
    activity = {
      team: room.team,
      target: room._id,
      type: 'room',
      creator: room.creator,
      text: "{{__info-create-room}}",
      createdAt: room.createdAt,
      updatedAt: room.createdAt
    };
    if (room.isPrivate) {
      activity.isPublic = false;
      roomMembers = db.members.find({
        room: room._id,
        isQuit: false
      }, {
        user: 1
      });
      activity.members = roomMembers.map(function(member) {
        return member.user;
      }).filter(function(memberId) {
        return memberId;
      });
    } else {
      activity.isPublic = true;
    }
    print('保存动态', room._id);
    return db.activities.save(activity);
  });

  stories = db.stories.find({
    _id: {
      $gt: _startId
    }
  });

  stories.forEach(function(story) {
    var activity, ref;
    activity = db.activities.findOne({
      target: story._id
    });
    if (activity) {
      return;
    }
    activity = {
      team: story.team,
      target: story._id,
      type: 'story',
      creator: story.creator,
      isPublic: story.isPublic,
      createdAt: story.createdAt,
      updatedAt: story.createdAt
    };
    if ((ref = story.members) != null ? ref.length : void 0) {
      activity.members = story.members;
    }
    switch (story.category) {
      case 'topic':
        activity.text = '{{__info-create-topic-story}}';
        break;
      case 'file':
        activity.text = '{{__info-create-file-story}}';
        break;
      case 'link':
        activity.text = '{{__info-create-link-story}}';
        break;
      default:
        return;
    }
    print('保存动态', story._id);
    return db.activities.save(activity);
  });

}).call(this);
